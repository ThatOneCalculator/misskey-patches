diff --git a/packages/client/src/store.ts b/packages/client/src/store.ts
index a3545c836..a5eedd9ce 100644
--- a/packages/client/src/store.ts
+++ b/packages/client/src/store.ts
@@ -53,7 +53,7 @@ export const defaultStore = markRaw(new Storage('base', {
 	},
 	reactions: {
 		where: 'account',
-		default: ['👍', '❤️', '😆', '🤔', '😮', '🎉', '💢', '😥', '😇', '🍮'],
+		default: ['⭐', ':calc:', ':calc_wink:', ':calc_laugh:', ':calc_shocked:', ':calc_cold_sweat:', ':calc_swear:', ':calc_woozy:', ':calc_pleading:', ':calc_exhale:', ':calc_smile_hearts:', ':calc_kiss:', ':calc_headpats:', ':calc_innocent:', ':calc_flushed:', ':calcthonk:', ':calchigh:', ':calcmentalbreakdowncrying:', ':calctrollage:', ':calcgunarm:', ':calcspunchbop:'],
 	},
 	mutedWords: {
 		where: 'account',
@@ -68,15 +68,13 @@ export const defaultStore = markRaw(new Storage('base', {
 		where: 'deviceAccount',
 		default: [
 			'notifications',
-			'favorites',
-			'drive',
+			'messaging',
 			'followRequests',
+			'favorites',
 			'-',
 			'explore',
-			'announcements',
+			'channels',
 			'search',
-			'-',
-			'ui',
 		],
 	},
 	visibility: {
@@ -165,7 +163,7 @@ export const defaultStore = markRaw(new Storage('base', {
 	},
 	useBlurEffect: {
 		where: 'device',
-		default: true,
+		default: false,
 	},
 	showFixedPostForm: {
 		where: 'device',
@@ -193,15 +191,15 @@ export const defaultStore = markRaw(new Storage('base', {
 	},
 	reactionPickerSize: {
 		where: 'device',
-		default: 1,
+		default: 3,
 	},
 	reactionPickerWidth: {
 		where: 'device',
-		default: 1,
+		default: 3,
 	},
 	reactionPickerHeight: {
 		where: 'device',
-		default: 2,
+		default: 3,
 	},
 	reactionPickerUseDrawerForMobile: {
 		where: 'device',
@@ -253,7 +251,7 @@ export const defaultStore = markRaw(new Storage('base', {
 	},
 	enterSendsMessage: {
 		where: 'device',
-		default: false,
+		default: true,
 	},
 }));

@@ -284,7 +282,7 @@ export class ColdDeviceStorage {
 		plugins: [] as Plugin[],
 		mediaVolume: 0.5,
 		sound_masterVolume: 0.3,
-		sound_note: { type: 'syuilo/down', volume: 1 },
+		sound_note: { type: 'none', volume: 0 },
 		sound_noteMy: { type: 'syuilo/up', volume: 1 },
 		sound_notification: { type: 'syuilo/pope2', volume: 1 },
 		sound_chat: { type: 'syuilo/pope1', volume: 1 },
@@ -308,6 +306,14 @@ export class ColdDeviceStorage {
 	}

 	public static set<T extends keyof typeof ColdDeviceStorage.default>(key: T, value: typeof ColdDeviceStorage.default[T]): void {
+		// 呼び出し側のバグ等で undefined が来ることがある
+		// undefined を文字列として localStorage に入れると参照する際の JSON.parse でコケて不具合の元になるため無視
+		// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition
+		if (value === undefined) {
+			console.error(`attempt to store undefined value for key '${key}'`);
+			return;
+		}
+
 		localStorage.setItem(PREFIX + key, JSON.stringify(value));

 		for (const watcher of this.watchers) {
